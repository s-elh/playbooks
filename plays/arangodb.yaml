---
- name: Install and Configure ArangoDB
  hosts: all
  become: yes
  vars:
    proxy_url: "http://10.1.38.2:3128"
    db_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] | default('') }}"
    db_user: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomUser'] | default('') }}"
    db_name: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomName'] | default('') }}"
    root_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] | default('') }}"
  tasks:
    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Add ArangoDB GPG key
      apt_key:
        url: https://download.arangodb.com/arangodb312/DEBIAN/Release.key
        state: present

    - name: Add ArangoDB repository
      apt_repository:
        repo: "deb https://download.arangodb.com/arangodb312/DEBIAN/ /"
        state: present
        filename: arangodb

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install ArangoDB
      apt:
        name: arangodb3
        state: present

    - name: Enable and start ArangoDB service
      service:
        name: arangodb3
        state: started
        enabled: yes

    - name: Wait for ArangoDB to be ready
      wait_for:
        host: 127.0.0.1
        port: 8529
        delay: 5
        timeout: 30

    - name: Set ArangoDB root password
      shell: |
        arangosh \
          --server.endpoint tcp://127.0.0.1:8529 \
          --javascript.execute-string "require('@arangodb/users').update('root', '{{ root_password }}');"

    - name: Enable authentication in ArangoDB configuration
      ini_file:
        path: /etc/arangodb3/arangod.conf
        section: server
        option: authentication
        value: 'true'

    - name: Restart ArangoDB service
      service:
        name: arangodb3
        state: restarted

    - name: Proceed with database setup if credentials are provided
      block:
        - name: Create ArangoDB database
          shell: |
            arangosh \
              --server.endpoint tcp://127.0.0.1:8529 \
              --server.username root \
              --server.password '{{ root_password }}' \
              --javascript.execute-string "db._createDatabase('{{ db_name }}');"

        - name: Create ArangoDB user
          shell: |
            arangosh \
              --server.endpoint tcp://127.0.0.1:8529 \
              --server.username root \
              --server.password '{{ root_password }}' \
              --javascript.execute-string "require('@arangodb/users').save('{{ db_user }}', '{{ db_password }}');"

        - name: Grant user access to database
          shell: |
            arangosh \
              --server.endpoint tcp://127.0.0.1:8529 \
              --server.username root \
              --server.password '{{ root_password }}' \
              --javascript.execute-string "require('@arangodb/users').grantDatabase('{{ db_user }}', '{{ db_name }}');"

      when:
        - db_name != ''
        - db_user != ''
        - db_password != ''
        - root_password != ''

    - name: Skip database setup if credentials are not provided
      debug:
        msg: "Database credentials not provided; skipping database and user creation."
      when:
        - db_name == '' or db_user == '' or db_password == '' or root_password == ''
