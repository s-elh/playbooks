---
- name: Install and Configure InfluxDB
  hosts: all
  become: yes
  vars:
    proxy_url: "http://10.1.38.2:3128"
    db_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] | default('') }}"
    db_user: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomUser'] | default('') }}"
    db_name: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomName'] | default('') }}"
  tasks:
    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Download InfluxData GPG key
      get_url:
        url: https://repos.influxdata.com/influxdata-archive_compat.key
        dest: /tmp/influxdata-archive_compat.key

    - name: Verify and install GPG key
      shell: |
        echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c /tmp/influxdata-archive_compat.key' | sha256sum -c && \
        cat /tmp/influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
      args:
        creates: /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg

    - name: Add InfluxDB repository
      apt_repository:
        repo: deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main
        state: present
        filename: influxdata

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install InfluxDB
      apt:
        name: influxdb
        state: present

    - name: Enable and start InfluxDB service
      service:
        name: influxdb
        state: started
        enabled: yes

    - name: Proceed with database setup if credentials are provided
      block:
        - name: Create InfluxDB database
          influxdb_database:
            name: "{{ db_name }}"

        - name: Create InfluxDB user
          influxdb_user:
            username: "{{ db_user }}"
            password: "{{ db_password }}"
            state: present
            admin: yes

        - name: Grant user privileges on database
          influxdb_user:
            username: "{{ db_user }}"
            password: "{{ db_password }}"
            databases: "{{ db_name }}"
            state: present
            admin: no
            grants:
              - ALL
      when:
        - db_name != ''
        - db_user != ''
        - db_password != ''

    - name: Skip database setup if credentials are not provided
      debug:
        msg: "Database credentials not provided; skipping database and user creation."
      when:
        - db_name == '' or db_user == '' or db_password == ''
