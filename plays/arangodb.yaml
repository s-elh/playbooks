---
- name: Install ArangoDB
  hosts: all
  become: true
  gather_facts: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    db_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] | default('') }}"
    db_user: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomUser'] | default('') }}"
    db_name: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomName'] | default('') }}"
    db_vars_provided: false
  tasks:  
    - name: Check if database variables are provided
      set_fact:
        db_vars_provided: true
      when: 
        - db_password != ''
        - db_user != ''
        - db_name != ''

    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Install required packages
      apt:
        name:
          - gnupg
          - curl
          - apt-transport-https
        state: present
        update_cache: yes

    - name: Add ArangoDB GPG key
      apt_key:
        url: https://download.arangodb.com/arangodb312/DEBIAN/Release.key
        state: present

    - name: Add ArangoDB repository
      apt_repository:
        repo: "deb https://download.arangodb.com/arangodb312/DEBIAN/ /"
        state: present
        filename: arangodb

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install ArangoDB
      apt:
        name: arangodb3
        state: present

    - name: Enable and start ArangoDB service
      systemd:
        name: arangodb3
        enabled: yes
        state: started

    - name: Create database and user
      command: >
        arangosh --server.authentication false
        --javascript.execute-string '
        try {
          db._createDatabase("{{ db_name }}");
          db._useDatabase("{{ db_name }}");
          require("@arangodb/users").save("{{ db_user }}", "{{ db_password }}");
          require("@arangodb/users").update("{{ db_user }}", { active: true });
          require("@arangodb/users").grantDatabase("{{ db_user }}", "{{ db_name }}", "rw");
          print("Database and user created successfully");
        } catch (e) {
          print("Error: " + e);
          throw e;
        }'
      register: create_db_result
      when: db_vars_provided
      changed_when: create_db_result.rc == 0
      failed_when: create_db_result.rc != 0
