- name: Configure kURL
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    password: "ACSCloud!2021!"

  tasks:
    - name: Configure HTTP proxy for apt
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Remove problematic Kubernetes repository
      file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent

    - name: Clean APT cache
      command: apt clean

    - name: Update apt and upgrade packages
      command: apt update
      ignore_errors: true

    - name: Upgrade packages
      command: apt upgrade -y
      ignore_errors: true

    - name: Install curl and tar
      command: apt install -y curl tar

    - name: Install Docker
      command: apt install -y docker.io

    - name: Enable Docker service
      command: systemctl enable docker

    - name: Start Docker service
      command: systemctl start docker

    - name: Unset HTTP/HTTPS proxy variables
      shell: |
        unset http_proxy
        unset https_proxy
        unset ftp_proxy
        unset all_proxy
      ignore_errors: true

    - name: Configure DNS
      block:
        - name: Edit /etc/resolv.conf
          lineinfile:
            path: /etc/resolv.conf
            line: "{{ item }}"
            create: yes
          with_items:
            - "nameserver 8.8.8.8"
            - "nameserver 1.1.1.1"

        - name: Check if NetworkManager service exists
          shell: |
            systemctl list-unit-files --type=service | grep -qw NetworkManager
          register: nm_service_check
          ignore_errors: true
          changed_when: false

        - name: Restart NetworkManager if available
          command: systemctl restart NetworkManager
          when: nm_service_check.rc == 0
          ignore_errors: true

        - name: Restart networking as fallback
          command: systemctl restart networking
          when: nm_service_check.rc != 0
          ignore_errors: true

    - name: Configure NetworkManager DNS settings
      block:
        - name: Edit NetworkManager.conf
          lineinfile:
            path: /etc/NetworkManager/NetworkManager.conf
            line: "dns=none"
            create: yes
          ignore_errors: true

        - name: Restart NetworkManager
          command: systemctl restart NetworkManager
          ignore_errors: true

    - name: Install firewalld
      command: apt install -y firewalld

    - name: Install kubectl
      shell: |
        curl -LO https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl
        chmod +x kubectl
        mv kubectl /usr/local/bin/
      args:
        creates: /usr/local/bin/kubectl

    - name: Run kURL installation script
      command: curl https://kurl.sh/8eb26e2 | sudo bash
      environment:
        DEBIAN_FRONTEND: noninteractive
      expect:
        command: curl https://kurl.sh/8eb26e2 | sudo bash
        responses:
          'Do you want to continue? [Y/n]': 'Y'
