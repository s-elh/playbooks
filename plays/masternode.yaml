---
- name: Configure Kubernetes Master Node using kURL
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"  # Optional Proxy
    kurl_url: "https://kurl.sh/d6c2d72" # Use your kURL link here

  tasks:
    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies
      when: proxy_url is defined

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'
      when: proxy_url is defined

    - name: Add Kubernetes official GPG key
      ansible.builtin.shell: |
        mkdir -p /usr/share/keyrings
        curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: Add Kubernetes apt repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present
        update_cache: yes

    - name: Install required packages
      ansible.builtin.apt:
        name: 
          - curl 
          - apt-transport-https 
          - ca-certificates
        state: present
        update_cache: yes

    - name: Download and run kURL installer for Kubernetes
      ansible.builtin.shell: |
        curl -sSL {{ kurl_url }} | sudo bash
      args:
        warn: false

    - name: Wait for the kURL installer to complete
      wait_for:
        path: /var/lib/rancher/k3s/k3s.yaml
        state: present
        timeout: 600

    - name: Print success message
      debug:
        msg: "Kubernetes master node installation completed successfully using kURL."
