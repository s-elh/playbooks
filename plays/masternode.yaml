---
- name: Configure and install Kubernetes with kURL
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"

  tasks:
    - name: Configure HTTP proxy for apt
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Wait for the lock on apt package management to be released
      shell: |
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
          echo "Waiting for other apt-get process to finish...";
          sleep 5;
        done
      changed_when: false

    - name: Update and upgrade system packages
      apt:
        update_cache: yes
        upgrade: dist
      become: true

    - name: Add DNS entries to resolv.conf
      lineinfile:
        path: /etc/resolv.conf
        line: "nameserver {{ item }}"
        state: present
      loop:
        - 8.8.8.8
        - 8.8.4.4
        - 1.1.1.1

    - name: Disable systemd-resolved service
      shell: |
        sudo systemctl disable --now systemd-resolved

    - name: Configure NetworkManager to disable DNS management
      blockinfile:
        path: /etc/NetworkManager/NetworkManager.conf
        block: |
          [main]
          dns=none

    - name: Restart NetworkManager
      shell: |
        sudo systemctl restart NetworkManager

    - name: Disable swap
      shell: |
        swapoff --all
        sed -i.bak '/swap/d' /etc/fstab
      args:
        warn: false

    - name: Run kURL join script
      shell: |
        curl -fsSL https://kurl.sh/version/v2024.12.04-0/8eb26e2/join.sh | \
        sudo bash -s kubernetes-master-address=10.1.38.7:6443 \
        kubeadm-token=gz3ne6.6bl1g0blmvd28s9w \
        kubeadm-token-ca-hash=sha256:d9bc4332b838ed28e9a354e61859fcd91047603a2378ea85f86ce418a439c9d7 \
        kubernetes-version=1.29.11 \
        ekco-address=10.1.38.7:31880 \
        ekco-auth-token=LwDd3A5KmoeJIoqHZ6cFNLznN8AXmdW1oaUDp8gIlqjbcIYg3j6DAfPZvxfnoG3u \
        docker-registry-ip=10.96.3.41 \
        additional-no-proxy-addresses=10.96.0.0/22,10.32.0.0/20 \
        primary-host=10.1.38.7
      register: kurl_installation

    - name: Display output of kURL installation
      debug:
        var: kurl_installation.stdout_lines
