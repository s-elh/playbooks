- name: Configure kURL and Install Kubernetes
  hosts: all
  become: yes
  vars:
    ansible_become_password: "ACSCloud!2021!"
    proxy_url: "http://10.1.38.2:3128"

  tasks:
    # Supprimer /etc/resolv.conf s'il existe
    - name: Remove /etc/resolv.conf if it exists
      file:
        path: /etc/resolv.conf
        state: absent

    # Créer /etc/resolv.conf avec les serveurs DNS Google
    - name: Create /etc/resolv.conf with Google DNS
      copy:
        dest: /etc/resolv.conf
        content: |
          nameserver 8.8.8.8
          nameserver 8.8.4.4

    # Vérifier le contenu de /etc/resolv.conf
    - name: Verify /etc/resolv.conf contains Google DNS
      command: cat /etc/resolv.conf
      register: resolv_check

    - name: Debug resolv.conf contents
      debug:
        msg: "Contents of /etc/resolv.conf: {{ resolv_check.stdout }}"

    # Désactiver et arrêter systemd-resolved
    - name: Disable and stop systemd-resolved
      service:
        name: systemd-resolved
        state: stopped
        enabled: no

    # Configurer un proxy HTTP pour apt (si nécessaire)
    - name: Configure HTTP proxy for apt
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    # Configurer un proxy HTTP pour l'environnement
    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    # Installer Expect pour gérer les confirmations automatiques
    - name: Install Expect package
      apt:
        name: expect
        state: present
      when: ansible_os_family == "Debian"

    # Exécuter le script Kurl avec Expect pour gérer "y"
    - name: Run Kurl installation script with Expect
      expect:
        command: curl -fsSL https://kurl.sh/8eb26e2 | sudo bash
        responses:
          'Press y to continue': 'y'
      register: kurl_install

    # Déboguer la sortie de l'installation de Kurl
    - name: Debug Kurl installation output
      debug:
        msg: "{{ kurl_install.stdout }}"

    # Vérifier l'installation de Kubernetes
    - name: Verify Kubernetes installation
      shell: |
        kubectl version --client
      register: kubectl_check
      ignore_errors: yes

    - name: Debug Kubernetes version
      debug:
        msg: "Kubernetes version: {{ kubectl_check.stdout }}"
