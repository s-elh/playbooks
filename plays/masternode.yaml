---
- name: Install Kubernetes using kURL on Generic Linux
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"  # Adjust if behind a proxy

  tasks:
    - name: Ensure curl and iptables are installed
      package:
        name:
          - curl
          - iptables
        state: present

    - name: Configure HTTP proxy for apt (if needed)
      when: ansible_facts.network['interface'] == 'eth0'  # Check if the network interface is available
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies
        mode: '0644'

    - name: Configure HTTP proxy for environment (if needed)
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repository (using kubernetes-xenial)
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
        filename: kubernetes
        state: present

    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Ensure Kubernetes is installed using kURL
      shell: |
        curl -sSL https://kurl.sh/d6c2d72 | sudo bash
      args:
        creates: /usr/local/bin/kubelet  # Ensure the script runs only if kubelet is not already installed

    - name: Wait for Kubernetes to become ready
      shell: kubectl get nodes
      register: result
      retries: 5
      delay: 10
      until: result.stdout|search('Ready')

    - name: Show kubectl nodes
      debug:
        var: result.stdout
