---
- name: Configure kURL and Install Kubernetes
  hosts: all
  become: yes
  vars:
    ansible_become_password: "ACSCloud!2021!"
    proxy_url: "http://10.1.38.2:3128"

  tasks:
    - name: Remove /etc/resolv.conf if it exists
      file:
        path: /etc/resolv.conf
        state: absent
      register: remove_resolv

    - name: Debug resolv.conf removal
      debug:
        msg: "Removed /etc/resolv.conf: {{ remove_resolv }}"

    - name: Create /etc/resolv.conf with Google DNS
      copy:
        dest: /etc/resolv.conf
        content: |
          nameserver 8.8.8.8
      register: create_resolv

    - name: Debug resolv.conf creation
      debug:
        msg: "Created /etc/resolv.conf: {{ create_resolv }}"

    - name: Disable and stop systemd-resolved
      service:
        name: systemd-resolved
        state: stopped
        enabled: no
      register: disable_resolved

    - name: Debug systemd-resolved status
      debug:
        msg: "Systemd-resolved stopped and disabled: {{ disable_resolved }}"

    - name: Configure HTTP proxy for apt
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies
      register: proxy_apt

    - name: Debug apt proxy configuration
      debug:
        msg: "Proxy for apt configured: {{ proxy_apt }}"

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'
      register: proxy_env

    - name: Debug environment proxy configuration
      debug:
        msg: "Proxy for environment configured: {{ proxy_env }}"

    - name: Run the Kurl installation script with auto-confirmation
      shell: |
        yes | curl -fsSL https://kurl.sh/8eb26e2 | sudo bash
      args:
        executable: /bin/bash
      register: kurl_install

    - name: Debug Kurl installation output
      debug:
        msg: "{{ kurl_install.stdout }}"

    - name: Verify Kurl installation success
      command: kubectl version --client
      register: kubectl_version
      ignore_errors: yes

    - name: Debug kubectl version check
      debug:
        msg: "kubectl version output: {{ kubectl_version.stdout }}"
