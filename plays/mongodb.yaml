---
- name: Install and Configure MongoDB
  hosts: all
  become: true
  gather_facts: true
  vars:
    mongodb_version: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['version'] | default('6.0') }}"  
    mongodb_repo_url: "https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/{{ mongodb_version }}/x86_64/"
    db_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] | default('') }}"
    db_user: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomUser'] | default('') }}"
    db_name: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomName'] | default('') }}"
    rhel_username: "mmajnioui@powerm.ma"
    rhel_password: "{{ lookup('cypher','secret=secret/rhelpw') }}"
    db_vars_provided: false
    ansible_remote_tmp: "/var/tmp/.ansible/tmp"

  tasks:
    - name: Ensure Ansible remote tmp directory exists and is writable
      file:
        path: "{{ ansible_remote_tmp }}"
        state: directory
        mode: '1777'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      become: true

    - name: Check if database variables are provided
      set_fact:
        db_vars_provided: true
      when: 
        - db_password != ''
        - db_user != ''
        - db_name != ''

    # Updated Ubuntu-specific tasks
    - name: Configure resolv.conf with Google DNS
      when: ansible_distribution == "Ubuntu"
      shell: echo nameserver 8.8.8.8 > /etc/resolv.conf
        
    - name: Configure resolv.conf with Google DNS
      when: ansible_distribution == "Ubuntu"
      shell: echo > /etc/apt/apt.conf.d/90curtin-aptproxy

    - name: Create directory for MongoDB keys (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download MongoDB GPG key (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      get_url:
        url: "https://www.mongodb.org/static/pgp/server-{{ mongodb_version }}.asc"
        dest: "/tmp/mongodb-{{ mongodb_version }}.asc"
        validate_certs: no

    - name: Import MongoDB GPG key (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt_key:
        file: "/tmp/mongodb-{{ mongodb_version }}.asc"
        state: present

    - name: Add MongoDB repository (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      ansible.builtin.apt_repository:
        repo: "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu {{ ansible_distribution_release }}/mongodb-org/{{ mongodb_version }} multiverse"
        state: present
        update_cache: no

    - name: Update apt cache (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      ansible.builtin.apt:
        update_cache: yes

    # RHEL-specific tasks
    - name: Register and subscribe RHEL system
      when: ansible_os_family == 'RedHat'
      command: subscription-manager register --username {{ rhel_username }} --password {{ rhel_password }} --auto-attach
      register: subscription_result
      failed_when: subscription_result.rc != 0 and 'This system is already registered' not in subscription_result.stderr
      changed_when: subscription_result.rc == 0

    - name: Enable required RHEL repositories
      when: ansible_os_family == 'RedHat'
      command: subscription-manager repos --enable rhel-{{ ansible_distribution_major_version }}-for-x86_64-appstream-rpms
      register: repo_result
      failed_when: repo_result.rc != 0 and 'already enabled' not in repo_result.stderr
      changed_when: repo_result.rc == 0

    - name: Add MongoDB repository (RedHat)
      when: ansible_distribution == 'RedHat'
      yum_repository:
        name: "mongodb-org-{{ mongodb_version }}"
        description: "MongoDB Repository"
        baseurl: "{{ mongodb_repo_url }}"
        gpgcheck: yes
        enabled: yes
        gpgkey: "https://www.mongodb.org/static/pgp/server-{{ mongodb_version }}.asc"

    - name: Update YUM cache (RedHat)
      when: ansible_distribution == 'RedHat'
      yum:
        name: "*"
        state: latest
        update_cache: yes

    - name: Install MongoDB (RedHat)
      when: ansible_distribution == 'RedHat'
      yum:
        name: 
          - mongodb-org
          - mongodb-mongosh
        state: present

    - name: Install MongoDB on Ubuntu
      when: ansible_distribution == "Ubuntu"
      apt:
        name:
          - mongodb-org
          - mongodb-mongosh
        state: present

    - name: Enable and start MongoDB service
      systemd:
        name: mongod
        enabled: yes
        state: started

    - name: Set up MongoDB user and database via shell
      when: db_vars_provided
      shell: |
        mongosh {{ db_name }} --eval "db.createUser({user: '{{ db_user }}', pwd: '{{ db_password }}', roles: [{role: 'readWrite', db: '{{ db_name }}'}, {role: 'dbAdmin', db: '{{ db_name }}'}]})"
      args:
        chdir: /tmp
      register: mongo_user_setup
      changed_when: "'Successfully added user' in mongo_user_setup.stdout"
      failed_when: "'Error' in mongo_user_setup.stderr"

    - name: Print status of MongoDB setup
      debug:
        msg: "MongoDB setup completed with user {{ db_user }} and database {{ db_name }}"
      when: db_vars_provided
