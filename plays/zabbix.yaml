---
- name: Install and Configure Zabbix 7.0
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    zabbix_version: "7.0-2"
    ubuntu_version: "22.04"
    mysql_root_password: "Password123@"
    zabbix_db_password: "Password123@"
    zabbix_server_name: "Zabbix Server"
  tasks:
    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Download Zabbix release package
      get_url:
        url: "https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_{{ zabbix_version }}+ubuntu{{ ubuntu_version }}_all.deb"
        dest: "/tmp/zabbix-release.deb"
      environment:
        http_proxy: "{{ proxy_url }}"
        https_proxy: "{{ proxy_url }}"

    - name: Install Zabbix repository
      apt:
        deb: "/tmp/zabbix-release.deb"
        state: present

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present

    - name: Wait for MySQL to start
      wait_for:
        port: 3306
        timeout: 30

    - name: Set MySQL root password
      shell: |
        mysql --user=root <<EOF
        ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_root_password }}';
        FLUSH PRIVILEGES;
        EOF
      ignore_errors: yes

    - name: Create MySQL config file
      copy:
        content: |
          [client]
          user=root
          password={{ mysql_root_password }}
        dest: ~/.my.cnf
        mode: '0600'

    - name: Enable log_bin_trust_function_creators
      shell: |
        mysql --user=root <<EOF
        SET GLOBAL log_bin_trust_function_creators = 1;
        EOF

    - name: Create Zabbix database and user with required privileges
      shell: |
        mysql --user=root <<EOF
        CREATE DATABASE IF NOT EXISTS zabbix CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;
        CREATE USER IF NOT EXISTS 'zabbix'@'localhost' IDENTIFIED BY '{{ zabbix_db_password }}';
        GRANT ALL PRIVILEGES ON zabbix.* TO 'zabbix'@'localhost';
        GRANT SUPER ON *.* TO 'zabbix'@'localhost';
        FLUSH PRIVILEGES;
        EOF

    - name: Install Zabbix server, frontend, and agent
      apt:
        name:
          - zabbix-server-mysql
          - zabbix-frontend-php
          - zabbix-apache-conf
          - zabbix-sql-scripts
          - zabbix-agent
        state: present

    - name: Create MySQL configuration for binary logging
      copy:
        content: |
          [mysqld]
          log_bin_trust_function_creators=1
        dest: /etc/mysql/mysql.conf.d/zabbix.cnf
        mode: '0644'

    - name: Restart MySQL to apply new configuration
      systemd:
        name: mysql
        state: restarted

    - name: Check if Zabbix database is already initialized
      shell: "mysql -u zabbix -p{{ zabbix_db_password }} zabbix -e 'SHOW TABLES LIKE \"users\"'"
      register: db_check
      ignore_errors: yes

    - name: Import initial schema and data
      shell: "zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql -uzabbix -p{{ zabbix_db_password }} zabbix"
      when: db_check.rc != 0
      register: import_result
      retries: 3
      delay: 10
      until: import_result.rc == 0

    - name: Configure Zabbix server
      lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^DBPassword=', line: 'DBPassword={{ zabbix_db_password }}' }

    - name: Configure PHP for Zabbix frontend
      lineinfile:
        path: /etc/zabbix/apache.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '# php_value date.timezone Europe/Riga', line: 'php_value date.timezone Europe/London' }

    - name: Restart and enable Zabbix server
      systemd:
        name: zabbix-server
        state: restarted
        enabled: yes

    - name: Restart and enable Zabbix agent
      systemd:
        name: zabbix-agent
        state: restarted
        enabled: yes

    - name: Restart Apache
      systemd:
        name: apache2
        state: restarted

    - name: Clean up downloaded package
      file:
        path: "/tmp/zabbix-release.deb"
        state: absent

    - name: Print Zabbix installation complete message
      debug:
        msg: "Zabbix 7.0 has been installed successfully. Access the web interface at http://{{ morpheus['server']['internalIp'] }}/zabbix"
