---
- name: Install Zabbix on Ubuntu and RHEL
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    rhel_username: "mmajnioui@powerm.ma"
    rhel_password: "{{ lookup('cypher','secret=secret/rhelpw') }}"
    zabbix_db_password: "zabbix123"

  tasks:
    # Common proxy environment configuration
    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    # Ubuntu-specific tasks
    - name: Configure HTTP proxy for apt (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Download Zabbix release package (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      get_url:
        url: https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest+ubuntu22.04_all.deb
        dest: /tmp/zabbix-release.deb
      environment:
        http_proxy: "{{ proxy_url }}"
        https_proxy: "{{ proxy_url }}"

    - name: Install Zabbix release package (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        deb: /tmp/zabbix-release.deb
        state: present

    - name: Update apt cache (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        update_cache: yes

    - name: Install Zabbix packages (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        name:
          - zabbix-server-pgsql
          - zabbix-frontend-php
          - php8.1-pgsql
          - zabbix-apache-conf
          - zabbix-sql-scripts
          - zabbix-agent
        state: present
      register: zabbix_install_ubuntu

    # RHEL-specific tasks
    - name: Configure HTTP proxy for yum (RHEL)
      when: ansible_os_family == "RedHat"
      lineinfile:
        path: /etc/yum.conf
        line: 'proxy={{ proxy_url }}'
        create: yes

    - name: Register and subscribe RHEL system
      when: ansible_os_family == "RedHat"
      command: subscription-manager register --username {{ rhel_username }} --password {{ rhel_password }} --auto-attach
      register: subscription_result
      failed_when: subscription_result.rc != 0 and 'This system is already registered' not in subscription_result.stderr
      changed_when: subscription_result.rc == 0

    - name: Install Zabbix repository (RHEL)
      when: ansible_os_family == "RedHat"
      yum:
        name: https://repo.zabbix.com/zabbix/7.0/rhel/8/x86_64/zabbix-release-latest.el8.noarch.rpm
        state: present
        disable_gpg_check: yes

    - name: Switch PHP module to 8.2 (RHEL)
      when: ansible_os_family == "RedHat"
      command: dnf module switch-to php:8.2 -y

    - name: Install Zabbix packages (RHEL)
      when: ansible_os_family == "RedHat"
      dnf:
        name:
          - zabbix-server-pgsql
          - zabbix-web-pgsql
          - zabbix-apache-conf
          - zabbix-sql-scripts
          - zabbix-selinux-policy
          - zabbix-agent
        state: present
      register: zabbix_install_rhel

    # Common tasks for both distributions
    - name: Create Zabbix database user
      become_user: postgres
      postgresql_user:
        name: zabbix
        password: "{{ zabbix_db_password }}"
        role_attr_flags: CREATEDB,LOGIN

    - name: Create Zabbix database
      become_user: postgres
      postgresql_db:
        name: zabbix
        owner: zabbix

    - name: Import Zabbix schema
      become_user: zabbix
      shell: zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | psql zabbix
      register: schema_import
      changed_when: schema_import.rc == 0
      failed_when: schema_import.rc != 0

    - name: Configure Zabbix server
      lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: '^DBPassword='
        line: "DBPassword={{ zabbix_db_password }}"

    # Start services for Ubuntu
    - name: Start Zabbix services (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - zabbix-server
        - zabbix-agent
        - apache2

    # Start services for RHEL
    - name: Start Zabbix services (RHEL)
      when: ansible_os_family == "RedHat"
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - zabbix-server
        - zabbix-agent
        - httpd
        - php-fpm

    - name: Wait for Zabbix web interface
      uri:
        url: http://localhost/zabbix/
        status_code: 200
        timeout: 300
      register: result
      until: result.status == 200
      retries: 60
      delay: 5
      ignore_errors: yes

    - name: Clean up downloaded files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /tmp/zabbix-release.deb
      ignore_errors: yes

    - name: Print installation complete message
      debug:
        msg: 
          - "Zabbix has been installed successfully."
          - "Access Zabbix at https://{{ morpheus['server']['internalIp'] }}/zabbix"
          - "Default credentials:"
          - "Username: Admin"
          - "Password: zabbix"
