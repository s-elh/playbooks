---
- name: Install and configure Zabbix
  hosts: all
  vars:
    proxy_url: "http://10.1.38.2:3128"
    sudo_password: "{{ lookup('cypher', 'secret=secret/pw') }}"
    db_password: "Password123@"

  tasks:
    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'
  
    - name: Download Zabbix repository package
      ansible.builtin.shell: |
        wget https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest+ubuntu22.04_all.deb -O /tmp/zabbix-release_latest+ubuntu22.04_all.deb
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Install Zabbix repository package
      ansible.builtin.shell: |
        dpkg -i /tmp/zabbix-release_latest+ubuntu22.04_all.deb
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Update APT cache
      ansible.builtin.shell: |
        apt update
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Install Zabbix server, frontend, and agent
      ansible.builtin.shell: |
        apt install -y zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-sql-scripts zabbix-agent
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Create Zabbix database
      ansible.builtin.shell: |
        mysql -uroot -p"{{ db_password }}" -e "CREATE DATABASE zabbix CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;"
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Create Zabbix database user and set privileges
      ansible.builtin.shell: |
        mysql -uroot -p"{{ db_password }}" -e "CREATE USER 'zabbix'@'localhost' IDENTIFIED BY '{{ db_password }}'; GRANT ALL PRIVILEGES ON zabbix.* TO 'zabbix'@'localhost'; SET GLOBAL log_bin_trust_function_creators = 1;"
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Import Zabbix initial schema
      ansible.builtin.shell: |
        zcat /usr/share/zabbix-sql-scripts/mysql/server.sql.gz | mysql --default-character-set=utf8mb4 -uzabbix -p"{{ db_password }}" zabbix
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Disable log_bin_trust_function_creators option
      ansible.builtin.shell: |
        mysql -uroot -p"{{ db_password }}" -e "SET GLOBAL log_bin_trust_function_creators = 0;"
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Configure DBPassword for Zabbix server
      ansible.builtin.shell: |
        sed -i 's/^# DBPassword=/DBPassword={{ db_password }}/' /etc/zabbix/zabbix_server.conf
      vars:
        ansible_become_pass: "{{ sudo_password }}"

    - name: Restart and enable Zabbix services
      ansible.builtin.shell: |
        systemctl restart zabbix-server zabbix-agent apache2
        systemctl enable zabbix-server zabbix-agent apache2
      vars:
        ansible_become_pass: "{{ sudo_password }}"
