---
- name: Install Docker on Ubuntu and RHEL
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    rhel_username: "mmajnioui@powerm.ma"
    rhel_password: "{{ lookup('cypher','secret=secret/rhelpw') }}"

  tasks:
    # Common proxy environment configuration
    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    # Ubuntu-specific tasks
    - name: Configure HTTP proxy for apt (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Update apt cache (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        update_cache: yes

    - name: Install required packages (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create keyrings directory (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.asc

    - name: Ensure Docker GPG key has read permissions (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      file:
        path: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Set up the Docker repository (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache again (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        update_cache: yes

    - name: Install Docker packages (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      register: docker_install_ubuntu

    # RHEL-specific tasks
    - name: Configure HTTP proxy for yum (RHEL)
      when: ansible_os_family == "RedHat"
      lineinfile:
        path: /etc/yum.conf
        line: 'proxy={{ proxy_url }}'
        create: yes

    - name: Register and subscribe RHEL system
      when: ansible_os_family == "RedHat"
      command: subscription-manager register --username {{ rhel_username }} --password {{ rhel_password }} --auto-attach
      register: subscription_result
      failed_when: subscription_result.rc != 0 and 'This system is already registered' not in subscription_result.stderr
      changed_when: subscription_result.rc == 0

    - name: Enable required RHEL repositories
      when: ansible_os_family == "RedHat"
      command: subscription-manager repos --enable rhel-8-for-x86_64-appstream-rpms
      register: repo_result
      failed_when: repo_result.rc != 0 and 'already enabled' not in repo_result.stderr
      changed_when: repo_result.rc == 0

    - name: Install dnf plugins core (RHEL)
      when: ansible_os_family == "RedHat"
      dnf:
        name: dnf-plugins-core
        state: present

    - name: Add Docker CE repository (RHEL)
      when: ansible_os_family == "RedHat"
      command: dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker packages (RHEL)
      when: ansible_os_family == "RedHat"
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      register: docker_install_rhel

    # Common tasks for both distributions
    - name: Create Docker daemon directory
      file:
        path: /etc/docker
        state: directory
        mode: '0755'

    - name: Configure Docker daemon with proxy
      copy:
        content: |
          {
            "dns": ["8.8.8.8", "8.8.4.4"],
            "proxies": {
              "http-proxy": "{{ proxy_url }}",
              "https-proxy": "{{ proxy_url }}",
              "no-proxy": "localhost,127.0.0.1"
            }
          }
        dest: /etc/docker/daemon.json
        mode: '0644'

    - name: Create Docker systemd directory
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        mode: '0755'

    - name: Configure Docker service with proxy
      copy:
        content: |
          [Service]
          Environment="HTTP_PROXY={{ proxy_url }}"
          Environment="HTTPS_PROXY={{ proxy_url }}"
          Environment="NO_PROXY=localhost,127.0.0.1"
        dest: /etc/systemd/system/docker.service.d/http-proxy.conf
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes
      when: docker_install_ubuntu is success or docker_install_rhel is success

    - name: Verify Docker installation
      command: docker run hello-world
      register: hello_world_output
      changed_when: false
      when: docker_install_ubuntu is success or docker_install_rhel is success

    - name: Display Docker verification result
      debug:
        var: hello_world_output.stdout_lines
      when: docker_install_ubuntu is success or docker_install_rhel is success
