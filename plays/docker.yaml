---
- name: Install Docker following official Docker documentation
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    ansible_become_password: "{{ lookup('cypher', 'secret=secret/pw') }}"
  tasks:

    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.asc

    - name: Ensure Docker GPG key has read permissions
      file:
        path: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Set up the Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache (again)
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      register: docker_install_result
      ignore_errors: yes

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes
      when: docker_install_result is success

    - name: Verify Docker installation
      command: sudo docker run hello-world
      register: hello_world_output
      changed_when: false
      when: docker_install_result is success

    - name: Display Docker verification result
      debug:
        var: hello_world_output.stdout_lines
      when: docker_install_result is success
