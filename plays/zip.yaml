---
- name: Install Java, SSH, and configure Hadoop user
  hosts: all
  become: yes
  become_method: sudo
  vars:
    hadoop_user: "hdoop"
    hadoop_full_name: "hadoop"
    hadoop_password: "hadoop"
    hadoop_version: "3.3.6"
    ansible_ssh_pipelining: true
    java_home: "/usr/lib/jvm/java-11-openjdk-amd64"
    hadoop_home: "/home/{{ hadoop_user }}/hadoop-{{ hadoop_version }}"

  pre_tasks:
    - name: Create temporary directory for Ansible
      file:
        path: /tmp/ansible-{{ hadoop_user }}
        state: directory
        mode: '0777'
      become: yes

    - name: Install curl
      apt:
        name: curl
        state: present
      become: yes

  tasks:
    # [Vos tâches existantes jusqu'à l'extraction de Hadoop]

    - name: Try downloading Hadoop with get_url
      get_url:
        url: "https://dlcdn.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz"
        dest: "/home/{{ hadoop_user }}/hadoop-{{ hadoop_version }}.tar.gz"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        timeout: 60
      become: yes
      become_user: "{{ hadoop_user }}"
      register: download_result
      ignore_errors: yes

    - name: Download Hadoop with curl if get_url failed
      shell: |
        curl -L "https://dlcdn.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz" -o "/home/{{ hadoop_user }}/hadoop-{{ hadoop_version }}.tar.gz"
      become: yes
      become_user: "{{ hadoop_user }}"
      when: download_result is failed
      register: curl_result

    - name: Extract Hadoop archive
      unarchive:
        src: "/home/{{ hadoop_user }}/hadoop-{{ hadoop_version }}.tar.gz"
        dest: "/home/{{ hadoop_user }}"
        remote_src: yes
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
      become: yes
      become_user: "{{ hadoop_user }}"

    # Ajout des configurations nécessaires pour le lancement du lien Hadoop
    - name: Set Hadoop environment variables in .bashrc
      blockinfile:
        path: "/home/{{ hadoop_user }}/.bashrc"
        block: |
          export HADOOP_HOME={{ hadoop_home }}
          export HADOOP_INSTALL=$HADOOP_HOME
          export HADOOP_MAPRED_HOME=$HADOOP_HOME
          export HADOOP_COMMON_HOME=$HADOOP_HOME
          export HADOOP_HDFS_HOME=$HADOOP_HOME
          export YARN_HOME=$HADOOP_HOME
          export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
          export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
          export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib/native"
      become: yes
      become_user: "{{ hadoop_user }}"

    - name: Apply environment changes
      shell: |
        source /home/{{ hadoop_user }}/.bashrc
      become: yes
      become_user: "{{ hadoop_user }}"

    - name: Set JAVA_HOME in Hadoop environment
      lineinfile:
        path: "{{ hadoop_home }}/etc/hadoop/hadoop-env.sh"
        regexp: '^export JAVA_HOME='
        line: 'export JAVA_HOME={{ java_home }}'
        state: present
      become: yes
      become_user: "{{ hadoop_user }}"

    - name: Verify Hadoop Installation
      command: "{{ hadoop_home }}/bin/hadoop version"
      register: hadoop_version_check
      changed_when: false
      become: yes
      become_user: "{{ hadoop_user }}"

    - name: Display Hadoop version
      debug:
        msg: "{{ hadoop_version_check.stdout_lines }}"
