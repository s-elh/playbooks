- name: Installation et Configuration de Hadoop Pseudo-distribué sur Ubuntu
  hosts: all
  become: yes
  tasks:

    - name: Mettre à jour les paquets
      apt:
        update_cache: yes

    - name: Installer OpenJDK 11
      apt:
        name: openjdk-11-jdk
        state: present

    - name: Vérifier la version de Java installée
      command: java -version
      register: java_version
      changed_when: false

    - name: Afficher la version de Java
      debug:
        msg: "{{ java_version.stderr_lines }}"

    - name: Créer un utilisateur Hadoop
      user:
        name: hadoop
        shell: /bin/bash
        createhome: yes

    - name: Télécharger Hadoop (avant-dernière version)
      get_url:
        url: "https://downloads.apache.org/hadoop/common/hadoop-3.3.6/hadoop-3.3.6.tar.gz"
        dest: "/home/hadoop/hadoop-3.3.6.tar.gz"
        mode: '0644'
        owner: hadoop
        group: hadoop

    - name: Extraire Hadoop
      unarchive:
        src: "/home/hadoop/hadoop-3.3.6.tar.gz"
        dest: "/home/hadoop/"
        remote_src: yes
        owner: hadoop
        group: hadoop

    - name: Renommer le dossier Hadoop
      command: mv /home/hadoop/hadoop-3.3.6 /home/hadoop/hadoop
      args:
        creates: /home/hadoop/hadoop

    - name: Ajouter les variables d'environnement Hadoop
      blockinfile:
        path: /home/hadoop/.bashrc
        block: |
          export HADOOP_HOME=/home/hadoop/hadoop
          export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
          export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop
          export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
      become_user: hadoop

    - name: Générer une clé SSH pour Hadoop
      command: "ssh-keygen -t rsa -N '' -f /home/hadoop/.ssh/id_rsa"
      args:
        creates: /home/hadoop/.ssh/id_rsa
      become_user: hadoop

    - name: Copier la clé publique dans authorized_keys
      copy:
        src: "/home/hadoop/.ssh/id_rsa.pub"
        dest: "/home/hadoop/.ssh/authorized_keys"
        remote_src: yes
        owner: hadoop
        group: hadoop
        mode: '0600'

    - name: Configurer core-site.xml
      copy:
        dest: "/home/hadoop/hadoop/etc/hadoop/core-site.xml"
        content: |
          <configuration>
            <property>
              <name>fs.defaultFS</name>
              <value>hdfs://localhost:9000</value>
            </property>
          </configuration>
        owner: hadoop
        group: hadoop

    - name: Configurer hdfs-site.xml
      copy:
        dest: "/home/hadoop/hadoop/etc/hadoop/hdfs-site.xml"
        content: |
          <configuration>
            <property>
              <name>dfs.replication</name>
              <value>1</value>
            </property>
          </configuration>
        owner: hadoop
        group: hadoop

    - name: Configurer mapred-site.xml
      copy:
        dest: "/home/hadoop/hadoop/etc/hadoop/mapred-site.xml"
        content: |
          <configuration>
            <property>
              <name>mapreduce.framework.name</name>
              <value>yarn</value>
            </property>
          </configuration>
        owner: hadoop
        group: hadoop

    - name: Configurer yarn-site.xml
      copy:
        dest: "/home/hadoop/hadoop/etc/hadoop/yarn-site.xml"
        content: |
          <configuration>
            <property>
              <name>yarn.nodemanager.aux-services</name>
              <value>mapreduce_shuffle</value>
            </property>
          </configuration>
        owner: hadoop
        group: hadoop

    - name: Formater le NameNode
      command: "/home/hadoop/hadoop/bin/hdfs namenode -format"
      become_user: hadoop
      args:
        creates: "/home/hadoop/hadoop_tmp/dfs/name"

    - name: Démarrer HDFS
      command: "/home/hadoop/hadoop/sbin/start-dfs.sh"
      become_user: hadoop

    - name: Démarrer YARN
      command: "/home/hadoop/hadoop/sbin/start-yarn.sh"
      become_user: hadoop

    - name: Vérifier les services en cours d'exécution (JPS)
      command: "jps"
      become_user: hadoop
      register: jps_output

    - name: Afficher les services Hadoop actifs
      debug:
        msg: "{{ jps_output.stdout_lines }}"
