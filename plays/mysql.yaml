---
- name: Install and Configure MySQL
  hosts: all
  become: true
  gather_facts: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    mysql_root_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] | default('rootroot') }}"
    db_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] | default('') }}"
    db_user: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomUser'] | default('') }}"
    db_name: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomName'] | default('') }}"
    rhel_username: "mmajnioui@powerm.ma"
    rhel_password: "{{ lookup('cypher','secret=secret/rhelpw') }}"
    ansible_remote_tmp: "/var/tmp/.ansible/tmp"

  tasks:
    # Common proxy configuration
    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    # Ubuntu-specific tasks
    - name: Configure HTTP proxy for apt (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Update apt cache (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install MySQL Server (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        name: mysql-server
        state: present

    - name: Set MySQL root password (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      shell: |
        mysql --user=root --execute="ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY '{{ mysql_root_password }}'; FLUSH PRIVILEGES;"
      ignore_errors: true

    # RHEL-specific tasks
    - name: Configure HTTP proxy for yum (RHEL)
      when: ansible_os_family == 'RedHat'
      lineinfile:
        path: /etc/yum.conf
        line: 'proxy={{ proxy_url }}'
        create: yes

    - name: Register and subscribe RHEL system
      when: ansible_os_family == 'RedHat'
      command: subscription-manager register --username {{ rhel_username }} --password {{ rhel_password }} --auto-attach
      register: subscription_result
      failed_when: subscription_result.rc != 0 and 'This system is already registered' not in subscription_result.stderr
      changed_when: subscription_result.rc == 0

    - name: Enable required RHEL repositories
      when: ansible_os_family == 'RedHat'
      command: subscription-manager repos --enable rhel-{{ ansible_distribution_major_version }}-for-x86_64-appstream-rpms
      register: repo_result
      failed_when: repo_result.rc != 0 and 'already enabled' not in repo_result.stderr
      changed_when: repo_result.rc == 0

    - name: Remove existing MySQL if exists (RHEL)
      when: ansible_os_family == 'RedHat'
      shell: |
        rpm -qa | grep -i mysql | xargs rpm -e --nodeps || true
      ignore_errors: yes

    - name: Download MySQL repo RPM (RHEL)
      when: ansible_os_family == 'RedHat'
      shell: |
        curl -x {{ proxy_url }} -L https://repo.mysql.com/mysql80-community-release-el{{ ansible_distribution_major_version }}-1.noarch.rpm -o /tmp/mysql80-community-release.rpm

    - name: Install MySQL repo RPM (RHEL)
      when: ansible_os_family == 'RedHat'
      shell: |
        rpm -ivh /tmp/mysql80-community-release.rpm
      ignore_errors: yes

    - name: Install MySQL Server (RHEL)
      when: ansible_os_family == 'RedHat'
      shell: |
        yum install -y mysql-community-server --nogpgcheck

    - name: Configure MySQL to skip password validation (RHEL)
      when: ansible_os_family == 'RedHat'
      copy:
        content: |
          [mysqld]
          validate_password.policy=LOW
          validate_password.length=0
          skip-password-validation
        dest: /etc/my.cnf.d/disable-password-validation.cnf
        mode: '0644'

    - name: Initialize MySQL data directory and start service (RHEL)
      when: ansible_os_family == 'RedHat'
      shell: |
        mysqld --initialize-insecure --user=mysql
        systemctl start mysqld
      args:
        creates: /var/lib/mysql/mysql
      ignore_errors: true

    - name: Set root password (RHEL)
      when: ansible_os_family == 'RedHat'
      shell: |
        mysql -u root --execute="ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_password }}'; FLUSH PRIVILEGES;"
      ignore_errors: true

    # Start MySQL service for Ubuntu
    - name: Ensure MySQL service is started and enabled (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      systemd:
        name: mysql
        state: started
        enabled: yes

    - name: Display MySQL version
      command: mysql --version
      register: mysql_version
      changed_when: false

    - name: Print MySQL version
      debug:
        var: mysql_version.stdout
