---
- name: Install Java, SSH, and configure Hadoop user
  hosts: all
  become: yes
  vars:
    hadoop_user: "hdoop"
    hadoop_full_name: "hadoop"
    hadoop_password: "hadoop"
    hadoop_version: "3.4.0"
    hadoop_download_url: "https://dlcdn.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz"
    hadoop_download_path: "/home/{{ hadoop_user }}/hadoop-{{ hadoop_version }}.tar.gz"
    hadoop_extract_path: "/home/{{ hadoop_user }}"
  tasks:
    ## 游릭 Step 1: Fix Ansible Temporary File Permissions
    - name: Ensure Ansible can create temporary files
      set_fact:
        ansible_become_flags: "-H -S"

    ## 游릭 Step 2: Ensure /tmp has correct permissions
    - name: Set correct permissions for /tmp
      file:
        path: /tmp
        mode: "1777"

    ## 游릭 Step 3: Update APT package lists
    - name: Update APT package lists
      apt:
        update_cache: yes

    ## 游릭 Step 4: Install OpenJDK 8
    - name: Install OpenJDK 8
      apt:
        name: openjdk-8-jdk
        state: present

    ## 游릭 Step 5: Verify Java installation
    - name: Check Java and Javac versions
      command: "{{ item }}"
      with_items:
        - java -version
        - javac -version
      register: java_versions
      changed_when: false

    - name: Display Java versions
      debug:
        msg: "{{ java_versions.results | map(attribute='stdout_lines') | list }}"

    ## 游릭 Step 6: Install OpenSSH Server & Client
    - name: Install OpenSSH Server & Client
      apt:
        name:
          - openssh-server
          - openssh-client
        state: present

    ## 游릭 Step 7: Create Hadoop User and Generate SSH Key
    - name: Create Hadoop User and Generate SSH Key
      user:
        name: "{{ hadoop_user }}"
        comment: "{{ hadoop_full_name }}"
        password: "{{ hadoop_password | password_hash('sha512') }}"
        shell: /bin/bash
        createhome: yes
        generate_ssh_key: yes
        ssh_key_type: rsa
        ssh_key_bits: 4096
        ssh_key_file: ".ssh/id_rsa"

    ## 游릭 Step 8: Set Permissions for SSH Directory
    - name: Set correct permissions for .ssh directory
      file:
        path: "/home/{{ hadoop_user }}/.ssh"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: "0700"

    ## 游릭 Step 9: Add public key to authorized_keys
    - name: Copy public key to authorized_keys
      copy:
        remote_src: yes
        src: "/home/{{ hadoop_user }}/.ssh/id_rsa.pub"
        dest: "/home/{{ hadoop_user }}/.ssh/authorized_keys"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: "0600"

    ## 游릭 Step 10: Display SSH Keys
    - name: Display public SSH key
      become: yes
      become_user: "{{ hadoop_user }}"
      command: cat /home/{{ hadoop_user }}/.ssh/id_rsa.pub
      register: public_key
      changed_when: false

    - name: Show public SSH key
      debug:
        msg: "{{ public_key.stdout }}"

    - name: Display private SSH key path
      debug:
        msg: "Private key is located at: /home/{{ hadoop_user }}/.ssh/id_rsa"

    ## 游릭 Step 11: Download Hadoop
    - name: Download Hadoop {{ hadoop_version }}
      become: yes
      become_user: "{{ hadoop_user }}"
      get_url:
        url: "{{ hadoop_download_url }}"
        dest: "{{ hadoop_download_path }}"
        mode: '0644'

    ## 游릭 Step 12: Verify Hadoop Download
    - name: Check Hadoop download
      become: yes
      become_user: "{{ hadoop_user }}"
      stat:
        path: "{{ hadoop_download_path }}"
      register: hadoop_download

    - name: Display Hadoop download status
      debug:
        msg: "Hadoop {{ hadoop_version }} downloaded successfully: {{ hadoop_download.stat.exists }}"

    ## 游릭 Step 13: Extract Hadoop Tarball
    - name: Extract Hadoop tarball
      become: yes
      become_user: "{{ hadoop_user }}"
      unarchive:
        src: "{{ hadoop_download_path }}"
        dest: "{{ hadoop_extract_path }}"
        remote_src: yes
        creates: "{{ hadoop_extract_path }}/hadoop-{{ hadoop_version }}"

    ## 游릭 Step 14: Verify Hadoop Extraction
    - name: Check Hadoop extraction
      become: yes
      become_user: "{{ hadoop_user }}"
      stat:
        path: "{{ hadoop_extract_path }}/hadoop-{{ hadoop_version }}"
      register: hadoop_extract

    - name: Display Hadoop extraction status
      debug:
        msg: "Hadoop {{ hadoop_version }} extracted successfully: {{ hadoop_extract.stat.exists }}"

    ## 游릭 Step 15: List Extracted Hadoop Directory Contents
    - name: List Hadoop directory contents
      become: yes
      become_user: "{{ hadoop_user }}"
      command: ls -la "{{ hadoop_extract_path }}/hadoop-{{ hadoop_version }}"
      register: hadoop_dir_contents
      changed_when: false

    - name: Display Hadoop directory contents
      debug:
        msg: "{{ hadoop_dir_contents.stdout_lines }}"
