---
- name: Install and Configure Kubernetes Worker Node using kURL
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"

  tasks:

    # 1️⃣ Configure Proxy for APT (Ubuntu Only)
    - name: Configure HTTP proxy for apt
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    # 2️⃣ Configure Proxy for System Environment
    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    # 3️⃣ Update System Packages
    - name: Update APT package index (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      ansible.builtin.apt:
        update_cache: yes

    # 4️⃣ Install Required Dependencies
    - name: Install required dependencies for Kubernetes (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      ansible.builtin.apt:
        name: 
          - curl 
          - tar 
          - socat 
          - jq 
          - iptables 
        state: present

    # 5️⃣ Disable Swap
    - name: Disable swap
      ansible.builtin.command: swapoff -a

    - name: Ensure swap is disabled permanently
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '.*swap.*'
        state: absent

    # 6️⃣ Load Required Kernel Modules
    - name: Load required kernel modules
      ansible.builtin.shell: |
        modprobe br_netfilter
        modprobe overlay

    - name: Ensure br_netfilter and overlay modules are loaded on system boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          br_netfilter
          overlay

    # 7️⃣ Set System Configuration for Kubernetes Networking
    - name: Set sysctl parameters for Kubernetes
      ansible.builtin.copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Apply sysctl parameters
      ansible.builtin.command: sysctl --system

    # 8️⃣ Install Kubernetes via kURL
    - name: Download and run the kURL installer
      ansible.builtin.shell: |
        curl -fsSL https://kurl.sh/latest | sudo bash

    # 9️⃣ Join the Kubernetes Worker Node to the Cluster
    - name: Join the worker node to the Kubernetes cluster
      ansible.builtin.shell: |
        if [ -f /root/join-command.sh ]; then
          bash /root/join-command.sh
        else
          echo "Join command not found. Ensure it is created on the master."
        fi
