---
- name: Install and Configure Kubernetes Worker Node using kURL
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    kubernetes_repo_url: "https://apt.kubernetes.io/"
    kubernetes_repo_name: "kubernetes-xenial"
    
  tasks:
  
    # 1Ô∏è‚É£ Configure Proxy for APT (Ubuntu Only)
    - name: Configure HTTP proxy for apt
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    # 2Ô∏è‚É£ Configure Proxy for System Environment
    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    # 3Ô∏è‚É£ Install Required Dependencies for Kubernetes (Ubuntu)
    - name: Install required dependencies for Kubernetes (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      ansible.builtin.apt:
        name:
          - curl
          - tar
          - socat
          - jq
          - iptables
          - apt-transport-https
        state: present

    # 4Ô∏è‚É£ Add Kubernetes APT Repository and GPG Key
    - name: Add Kubernetes GPG key
      ansible.builtin.shell: |
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      become: true

    - name: Add Kubernetes APT repository for Ubuntu
      ansible.builtin.shell: |
        echo "deb {{ kubernetes_repo_url }} {{ kubernetes_repo_name }} main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
      become: true

    # 5Ô∏è‚É£ Update APT package index
    - name: Update APT package index
      ansible.builtin.apt:
        update_cache: yes
      become: true

    # 6Ô∏è‚É£ Install Kubernetes dependencies (kubelet, kubeadm, kubectl)
    - name: Install Kubernetes packages (kubelet, kubeadm, kubectl)
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes
      become: true

    # 7Ô∏è‚É£ Configure DNS (nameserver)
    - name: Add Google DNS to resolv.conf
      lineinfile:
        path: /etc/resolv.conf
        line: 'nameserver 8.8.8.8'
      become: true

    - name: Set persistent DNS via resolved.conf
      lineinfile:
        path: /etc/systemd/resolved.conf
        regexp: '^DNS='
        line: 'DNS=8.8.8.8'
      become: true

    - name: Restart systemd-resolved service
      ansible.builtin.systemd:
        name: systemd-resolved
        state: restarted
      become: true

    # 8Ô∏è‚É£ Disable Swap
    - name: Disable swap
      ansible.builtin.command: swapoff -a
      become: true

    - name: Ensure swap is disabled permanently
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '.*swap.*'
        state: absent
      become: true

    # 9Ô∏è‚É£ Load Required Kernel Modules
    - name: Load required kernel modules
      ansible.builtin.shell: |
        modprobe br_netfilter
        modprobe overlay
      become: true

    - name: Ensure br_netfilter and overlay modules are loaded on system boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          br_netfilter
          overlay
      become: true

    # üîü Set System Configuration for Kubernetes Networking
    - name: Set sysctl parameters for Kubernetes
      ansible.builtin.copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
      become: true

    - name: Apply sysctl parameters
      ansible.builtin.command: sysctl --system
      become: true

    # 1Ô∏è‚É£1Ô∏è‚É£ Install Kubernetes via kURL (sans "nameserver")
    - name: Download and run the kURL installer
      ansible.builtin.shell: |
        curl -fsSL https://kurl.sh/latest | sudo bash
      become: true

    # 1Ô∏è‚É£2Ô∏è‚É£ Join the Kubernetes Worker Node to the Cluster
    - name: Join the worker node to the Kubernetes cluster
      ansible.builtin.shell: |
        if [ -f /root/join-command.sh ]; then
          bash /root/join-command.sh
        else
          echo "Join command not found. Ensure it is created on the master."
        fi
      become: true
