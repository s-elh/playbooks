---
- name: Configure proxy, install Java, SSH, and setup Hadoop 3.4.1
  hosts: all
  become: yes
  vars:
    hadoop_user: "hadoop"
    hadoop_group: "hadoop"
    hadoop_home: "/usr/local/hadoop"
    java_home: "/usr/lib/jvm/java-11-openjdk-amd64"
    hadoop_url: "https://downloads.apache.org/hadoop/common/stable/hadoop-3.4.1.tar.gz"
    proxy_url: "http://10.1.38.2:3128"

  tasks:
    ## ðŸŸ¢ Ã‰tape 1 : Configuration du proxy
    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    ## ðŸŸ¢ Ã‰tape 2 : Fix Ansible Temporary File Permissions
    - name: Ensure Ansible can create temporary files
      set_fact:
        ansible_become_flags: "-H -S"

    - name: Set correct permissions for /tmp
      file:
        path: /tmp
        mode: "1777"

    ## ðŸŸ¢ Ã‰tape 3 : Mise Ã  jour du systÃ¨me et installation de Java et SSH
    - name: Update package lists
      apt:
        update_cache: yes

    - name: Install Java and SSH
      apt:
        name:
          - openjdk-8-jdk
          - default-jdk
          - default-jre
          - openssh-server
          - openssh-client
        state: present

    - name: Verify Java installation
      command: "{{ item }}"
      with_items:
        - java -version
        - javac -version
      register: java_version
      changed_when: false

    - name: Display Java version
      debug:
        msg: "{{ java_version.stdout_lines }}"

    ## ðŸŸ¢ Ã‰tape 4 : CrÃ©ation de l'utilisateur Hadoop et gestion des permissions
    - name: Ensure hadoop group exists
      group:
        name: "{{ hadoop_group }}"
        state: present

    - name: Ensure hadoop user exists with SSH Key
      user:
        name: "{{ hadoop_user }}"
        comment: "Hadoop User"
        group: "{{ hadoop_group }}"
        shell: /bin/bash
        createhome: yes
        home: "/home/{{ hadoop_user }}"
        generate_ssh_key: yes
        ssh_key_type: rsa
        ssh_key_bits: 4096
        ssh_key_file: ".ssh/id_rsa"

    - name: Set correct permissions for .ssh directory
      file:
        path: "/home/{{ hadoop_user }}/.ssh"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: "0700"

    - name: Copy public key to authorized_keys
      copy:
        remote_src: yes
        src: "/home/{{ hadoop_user }}/.ssh/id_rsa.pub"
        dest: "/home/{{ hadoop_user }}/.ssh/authorized_keys"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: "0600"

    ## ðŸŸ¢ Ã‰tape 5 : TÃ©lÃ©chargement et Installation de Hadoop 3.4.1
    - name: Ensure /usr/local exists
      file:
        path: "/usr/local"
        state: directory
        mode: "0755"

    - name: Download Hadoop 3.4.1
      get_url:
        url: "{{ hadoop_url }}"
        dest: "/tmp/hadoop.tar.gz"
        mode: "0644"
      retries: 3
      delay: 10
      register: download_result
      until: download_result is succeeded

    - name: Extract Hadoop
      unarchive:
        src: "/tmp/hadoop.tar.gz"
        dest: "/usr/local/"
        remote_src: yes

    - name: Rename Hadoop directory
      command: mv /usr/local/hadoop-3.4.1 /usr/local/hadoop
      args:
        removes: /usr/local/hadoop-3.4.1
        creates: "{{ hadoop_home }}"

    - name: Change ownership of Hadoop directory
      file:
        path: "{{ hadoop_home }}"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        recurse: yes

    ## ðŸŸ¢ Ã‰tape 6 : Configuration des variables d'environnement Hadoop
    - name: Set Hadoop environment variables in .bashrc
      blockinfile:
        path: "/home/{{ hadoop_user }}/.bashrc"
        block: |
          export HADOOP_HOME={{ hadoop_home }}
          export HADOOP_INSTALL=$HADOOP_HOME
          export HADOOP_MAPRED_HOME=$HADOOP_HOME
          export HADOOP_COMMON_HOME=$HADOOP_HOME
          export HADOOP_HDFS_HOME=$HADOOP_HOME
          export YARN_HOME=$HADOOP_HOME
          export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
          export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
          export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib/native"

    - name: Apply environment changes
      shell: |
        sudo -u {{ hadoop_user }} bash -c 'source /home/{{ hadoop_user }}/.bashrc'

    ## ðŸŸ¢ Ã‰tape 7 : Configuration de Java dans Hadoop
    - name: Set JAVA_HOME in Hadoop environment
      lineinfile:
        path: "{{ hadoop_home }}/etc/hadoop/hadoop-env.sh"
        regexp: '^export JAVA_HOME='
        line: 'export JAVA_HOME={{ java_home }}'
        state: present

    ## ðŸŸ¢ Ã‰tape 8 : VÃ©rification de l'installation de Hadoop
    - name: Check Hadoop version
      command: "{{ hadoop_home }}/bin/hadoop version"
      register: hadoop_version
      changed_when: false

    - name: Display Hadoop version
      debug:
        msg: "{{ hadoop_version.stdout_lines }}"
