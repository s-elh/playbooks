---
- name: Install Hadoop in Single-Node Mode
  hosts: all
  become: yes
  vars:
    java_package: "openjdk-11-jdk"
    hadoop_version: "3.3.6"
    hadoop_url: "https://downloads.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz"
    hadoop_home: "/usr/local/hadoop"
    hadoop_user: "hadoop"
  pre_tasks:
    - name: Ensure SELinux is disabled (temporary)
      command: setenforce 0
      when: ansible_selinux.status == "enabled"
      ignore_errors: yes

    - name: Create temporary Ansible directory for unprivileged user
      file:
        path: "/tmp/.ansible/tmp"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0755"

  tasks:
    - name: Install Java
      apt:
        name: "{{ java_package }}"
        state: present

    - name: Create Hadoop user
      user:
        name: "{{ hadoop_user }}"
        shell: /bin/bash
        create_home: yes

    - name: Create required directories for Hadoop
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: '0755'
      loop:
        - "{{ hadoop_home }}"
        - "/data/hadoop"
        - "/tmp/hadoop"

    - name: Download Hadoop
      get_url:
        url: "{{ hadoop_url }}"
        dest: /tmp/hadoop.tar.gz

    - name: Clean up existing Hadoop directory
      file:
        path: "{{ hadoop_home }}"
        state: absent

    - name: Extract Hadoop
      unarchive:
        src: /tmp/hadoop.tar.gz
        dest: /usr/local
        remote_src: yes

    - name: Set Hadoop ownership
      file:
        path: "{{ hadoop_home }}"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        recurse: yes

    - name: Create Hadoop configuration directory
      file:
        path: "{{ hadoop_home }}/etc/hadoop"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: "0755"

    - name: Configure Hadoop core-site.xml
      copy:
        dest: "{{ hadoop_home }}/etc/hadoop/core-site.xml"
        content: |
          <configuration>
            <property>
              <name>fs.defaultFS</name>
              <value>hdfs://localhost:9000</value>
            </property>
          </configuration>
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: '0644'

    - name: Configure Hadoop hdfs-site.xml
      copy:
        dest: "{{ hadoop_home }}/etc/hadoop/hdfs-site.xml"
        content: |
          <configuration>
            <property>
              <name>dfs.replication</name>
              <value>1</value>
            </property>
          </configuration>
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_user }}"
        mode: '0644'

    - name: Format HDFS
      command: "{{ hadoop_home }}/bin/hdfs namenode -format"
      become_user: "{{ hadoop_user }}"
      ignore_errors: yes

  handlers:
    - name: Set Hadoop Permissions
      command: chown -R "{{ hadoop_user }}:{{ hadoop_user }}" "{{ hadoop_home }}"
