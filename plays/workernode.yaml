---
- hosts: all
  become: yes
  vars:
    hadoop_version: "3.4.1"
    hadoop_user: "hadoop"
    hadoop_group: "hadoop"
    java_home: "/usr/lib/jvm/java-8-openjdk-amd64"
    hadoop_home: "/opt/hadoop"
    hadoop_data: "/data/hadoop"

  pre_tasks:
    - name: Create Hadoop group
      group:
        name: "{{ hadoop_group }}"
        state: present

    - name: Create Hadoop user
      user:
        name: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        shell: /bin/bash
        home: "/home/{{ hadoop_user }}"
        system: no

  tasks:
    - name: Configure DNS nameservers
      template:
        src: resolv.conf.j2
        dest: /etc/resolv.conf
        backup: yes
      vars:
        nameservers:
          - "8.8.8.8"
          - "8.8.4.4"

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name: 
          - ssh
          - rsync
          - openjdk-8-jdk
        state: present
        update_cache: yes

    - name: Create Hadoop directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        mode: '0755'
      loop:
        - "{{ hadoop_home }}"
        - "{{ hadoop_data }}/namenode"
        - "{{ hadoop_data }}/datanode"
        - "{{ hadoop_home }}/logs"
        - "{{ hadoop_home }}/pids"
        - "{{ hadoop_home }}/tmp"

    - name: Download Hadoop
      get_url:
        url: "https://dlcdn.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz"
        dest: "/tmp/hadoop-{{ hadoop_version }}.tar.gz"
        timeout: 300
        mode: '0644'
      register: download_result
      until: download_result is succeeded
      retries: 3
      delay: 10

    - name: Extract Hadoop
      unarchive:
        src: "/tmp/hadoop-{{ hadoop_version }}.tar.gz"
        dest: "/opt"
        remote_src: yes
        creates: "/opt/hadoop-{{ hadoop_version }}"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"

    - name: Create Hadoop symlink
      file:
        src: "/opt/hadoop-{{ hadoop_version }}"
        dest: "{{ hadoop_home }}"
        state: link
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"

    - name: Configure Hadoop environment
      template:
        src: hadoop-env.sh.j2
        dest: "{{ hadoop_home }}/etc/hadoop/hadoop-env.sh"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        mode: '0644'
      vars:
        java_home: "{{ java_home }}"
        hadoop_home: "{{ hadoop_home }}"

    - name: Configure Hadoop XML files
      template:
        src: "{{ item }}.j2"
        dest: "{{ hadoop_home }}/etc/hadoop/{{ item }}"
        owner: "{{ hadoop_user }}"
        group: "{{ hadoop_group }}"
        mode: '0644'
      loop:
        - core-site.xml
        - hdfs-site.xml
        - mapred-site.xml
        - yarn-site.xml

    - name: Set up SSH keys for Hadoop user
      user:
        name: "{{ hadoop_user }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: ".ssh/id_rsa"

    - name: Configure SSH authorized keys
      authorized_key:
        user: "{{ hadoop_user }}"
        state: present
        key: "{{ lookup('file', '/home/' + hadoop_user + '/.ssh/id_rsa.pub') }}"

    - name: Add Hadoop binaries to PATH
      template:
        src: hadoop.sh.j2
        dest: /etc/profile.d/hadoop.sh
        mode: '0644'
      vars:
        hadoop_home: "{{ hadoop_home }}"

    - name: Clean up downloaded archive
      file:
        path: "/tmp/hadoop-{{ hadoop_version }}.tar.gz"
        state: absent
