---
- name: Install Kubernetes using kURL
  hosts: k8s_nodes
  become: true
  vars:
    kurl_script_url: "https://kurl.sh/f2e5eda"

  pre_tasks:
    - name: Update apt cache (Debian/Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"
      ignore_errors: yes

    - name: Update yum cache (RedHat/CentOS)
      yum:
        update_cache: yes
      when: ansible_os_family == "RedHat"
      ignore_errors: yes

  tasks:
    - name: Install system prerequisites
      package:
        name:
          - curl
          - sudo
          - tar
          - gzip
          - openssl
          - ca-certificates
          - python3
          - iptables
          - selinux-utils
        state: present
      register: pkg_result
      retries: 3
      delay: 5
      until: pkg_result is success

    - name: Disable swap
      command: swapoff -a
      changed_when: false

    - name: Remove swap from fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Create temporary directory for kURL script
      file:
        path: /tmp/kurl
        state: directory
        mode: '0755'

    - name: Download kURL installation script
      get_url:
        url: "{{ kurl_script_url }}"
        dest: /tmp/kurl/install.sh
        mode: '0755'
        validate_certs: yes
        force: yes
      register: download_script
      retries: 3
      delay: 5
      until: download_script is success

    - name: Check if Kubernetes is already installed
      stat:
        path: /usr/bin/kubectl
      register: kubectl_binary

    - name: Create installation log directory
      file:
        path: /var/log/kurl
        state: directory
        mode: '0755'

    - name: Run kURL installation script
      shell: |
        set -x
        bash /tmp/kurl/install.sh 2>&1 | tee /var/log/kurl/installation.log
      args:
        creates: /usr/bin/kubectl
      register: kurl_installation
      when: not kubectl_binary.stat.exists
      ignore_errors: yes

    - name: Display installation output
      debug:
        var: kurl_installation.stdout_lines
      when: kurl_installation.stdout is defined

    - name: Display installation errors
      debug:
        var: kurl_installation.stderr_lines
      when: kurl_installation.stderr is defined

    - name: Fail if installation failed
      fail:
        msg: "kURL installation failed. Check /var/log/kurl/installation.log for details"
      when: 
        - not kubectl_binary.stat.exists
        - kurl_installation.rc is defined
        - kurl_installation.rc != 0

    - name: Verify Kubernetes installation
      command: kubectl version --short
      register: kubectl_version
      changed_when: false
      ignore_errors: yes

    - name: Display Kubernetes version
      debug:
        var: kubectl_version.stdout_lines
      when: kubectl_version is success

    - name: Clean up installation files
      file:
        path: /tmp/kurl
        state: absent
