---
- name: Test Ansible connection and environment
  hosts: all
  become: yes
  tasks:
    - name: Vérifier la connexion à la machine cible
      ping:

    - name: Vérifier l'espace disque
      command: df -h
      register: disk_space

    - name: Afficher l'espace disque
      debug:
        msg: "{{ disk_space.stdout_lines }}"

    - name: Vérifier les permissions sur /tmp
      stat:
        path: /tmp
      register: tmp_stat

    - name: Afficher les informations sur /tmp
      debug:
        msg: "Permissions de /tmp : {{ tmp_stat.stat.mode }} (doivent être 1777)"

    - name: Vérifier si ~/.ansible/tmp existe
      stat:
        path: "~/.ansible/tmp"
      register: ansible_tmp_stat

    - name: Créer ~/.ansible/tmp s'il n'existe pas
      file:
        path: "~/.ansible/tmp"
        state: directory
        mode: '0700'
      when: not ansible_tmp_stat.stat.exists

    - name: Vérifier le fichier de configuration Ansible
      command: ansible-config dump | grep remote_tmp
      register: ansible_config

    - name: Afficher la configuration remote_tmp
      debug:
        msg: "{{ ansible_config.stdout_lines }}"

- name: Configure Hadoop XML files
  hosts: all
  become: yes
  vars:
    hadoop_conf_dir: "/usr/local/hadoop/etc/hadoop"
  tasks:
    - name: Configure core-site.xml
      copy:
        dest: "{{ hadoop_conf_dir }}/core-site.xml"
        content: |
          <configuration>
            <property>
              <name>fs.defaultFS</name>
              <value>hdfs://localhost:9000</value>
            </property>
          </configuration>

    - name: Configure hdfs-site.xml
      copy:
        dest: "{{ hadoop_conf_dir }}/hdfs-site.xml"
        content: |
          <configuration>
            <property>
              <name>dfs.replication</name>
              <value>1</value>
            </property>
            <property>
              <name>dfs.namenode.name.dir</name>
              <value>file:/usr/local/hadoop/data/namenode</value>
            </property>
            <property>
              <name>dfs.datanode.data.dir</name>
              <value>file:/usr/local/hadoop/data/datanode</value>
            </property>
          </configuration>

    - name: Configure mapred-site.xml
      copy:
        dest: "{{ hadoop_conf_dir }}/mapred-site.xml"
        content: |
          <configuration>
            <property>
              <name>mapreduce.framework.name</name>
              <value>yarn</value>
            </property>
          </configuration>

    - name: Configure yarn-site.xml
      copy:
        dest: "{{ hadoop_conf_dir }}/yarn-site.xml"
        content: |
          <configuration>
            <property>
              <name>yarn.nodemanager.aux-services</name>
              <value>mapreduce_shuffle</value>
            </property>
          </configuration>
