---
- name: Install Kubernetes using kURL
  hosts: all
  become: true
  vars:
    kurl_script_url: "https://kurl.sh/f2e5eda"
    installation_timeout: 7200  # 2 hours in seconds

  tasks:
    - name: Create temporary directory for kURL script
      file:
        path: /tmp/kurl
        state: directory
        mode: '0755'

    - name: Download kURL installation script
      get_url:
        url: "{{ kurl_script_url }}"
        dest: /tmp/kurl/install.sh
        mode: '0755'
      register: download_script
      async: 300
      poll: 5

    - name: Check if Kubernetes is already installed
      stat:
        path: /usr/bin/kubectl
      register: kubectl_binary

    - name: Install required packages
      package:
        name:
          - curl
          - sudo
        state: present
      when: not kubectl_binary.stat.exists

    - name: Run kURL installation script
      shell: bash /tmp/kurl/install.sh
      args:
        creates: /usr/bin/kubectl
      register: kurl_installation
      async: "{{ installation_timeout }}"
      poll: 30
      when: not kubectl_binary.stat.exists

    - name: Wait for installation to complete
      async_status:
        jid: "{{ kurl_installation.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 240  # Will check every 30 seconds for 2 hours
      delay: 30
      when: not kubectl_binary.stat.exists

    - name: Clean up installation files
      file:
        path: /tmp/kurl
        state: absent

    - name: Verify Kubernetes installation
      command: kubectl version --short
      register: kubectl_version
      changed_when: false

    - name: Display Kubernetes version
      debug:
        var: kubectl_version.stdout_lines
