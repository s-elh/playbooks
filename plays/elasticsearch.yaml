---
- name: Install Elasticsearch Stack
  hosts: all
  become: true
  vars:
    elastic_version: "8.x"
    rhel_username: "mmajnioui@powerm.ma"
    rhel_password: "{{ lookup('cypher','secret=secret/rhelpw') }}"

  tasks:
    # RHEL-specific tasks
    - name: Register and subscribe RHEL system
      when: ansible_os_family == "RedHat"
      command: subscription-manager register --username {{ rhel_username }} --password {{ rhel_password }} --auto-attach
      register: subscription_result
      failed_when: subscription_result.rc != 0 and 'This system is already registered' not in subscription_result.stderr
      changed_when: subscription_result.rc == 0

    - name: Enable required RHEL repositories
      when: ansible_os_family == "RedHat"
      command: subscription-manager repos --enable rhel-8-for-x86_64-appstream-rpms
      register: repo_result
      failed_when: repo_result.rc != 0 and 'already enabled' not in repo_result.stderr
      changed_when: repo_result.rc == 0

    - name: Download Elasticsearch repository file (RHEL)
      when: ansible_os_family == "RedHat"
      get_url:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        dest: /etc/pki/rpm-gpg/GPG-KEY-elasticsearch
        mode: '0644'

    - name: Add Elasticsearch repository (RHEL)
      when: ansible_os_family == "RedHat"
      yum_repository:
        name: elasticsearch-{{ elastic_version }}
        description: Elasticsearch repository for {{ elastic_version }} packages
        baseurl: https://artifacts.elastic.co/packages/{{ elastic_version }}/yum
        gpgcheck: yes
        gpgkey: file:///etc/pki/rpm-gpg/GPG-KEY-elasticsearch
        enabled: yes

    - name: Clean yum cache (RHEL)
      when: ansible_os_family == "RedHat"
      command: yum clean all

    - name: Update yum cache (RHEL)
      when: ansible_os_family == "RedHat"
      command: yum makecache

    # Ubuntu-specific tasks
    - name: Configure resolv.conf with Google DNS
      when: ansible_distribution == "Ubuntu"
      shell: echo nameserver 8.8.8.8 > /etc/resolv.conf
        
    - name: Configure resolv.conf with Google DNS
      when: ansible_distribution == "Ubuntu"
      shell: echo > /etc/apt/apt.conf.d/90curtin-aptproxy

    - name: Install required packages (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        name:
          - apt-transport-https
          - gpg
          - curl
        state: present
        update_cache: yes

    - name: Download Elasticsearch GPG key (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      shell: |
        curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg

    - name: Add Elasticsearch repository (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      shell: |
        echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/{{ elastic_version }}/apt stable main" | tee /etc/apt/sources.list.d/elastic-{{ elastic_version }}.list

    - name: Update apt cache (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        update_cache: yes

    # Common installation tasks
    - name: Install Elasticsearch
      package:
        name: elasticsearch
        state: present

    - name: Install Kibana
      package:
        name: kibana
        state: present

    - name: Install Logstash
      package:
        name: logstash
        state: present

    - name: Configure Kibana
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^server\.host:'
        line: 'server.host: "0.0.0.0"'
        create: yes

    - name: Create Elasticsearch systemd directory
      file:
        path: /etc/systemd/system/elasticsearch.service.d
        state: directory
        mode: '0755'

    - name: Configure Elasticsearch service with proxy
      copy:
        content: |
          [Service]
          Environment="NO_PROXY=localhost,127.0.0.1"
        dest: /etc/systemd/system/elasticsearch.service.d/http-proxy.conf
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Start and enable Elasticsearch
      systemd:
        name: elasticsearch
        state: started
        enabled: yes

    - name: Start and enable Kibana
      systemd:
        name: kibana
        state: started
        enabled: yes

    - name: Start and enable Logstash
      systemd:
        name: logstash
        state: started
        enabled: yes

    - name: Wait for Elasticsearch to start
      wait_for:
        port: 9200
        delay: 10
        timeout: 300

    - name: Generate Elastic password
      shell: |
        cd /usr/share/elasticsearch && ./bin/elasticsearch-reset-password -u elastic --batch
      register: elastic_password
      changed_when: false

    - name: Generate Kibana enrollment token
      shell: |
        cd /usr/share/elasticsearch && ./bin/elasticsearch-create-enrollment-token -s kibana
      register: kibana_token
      changed_when: false

    - name: Display Elastic password
      debug:
        var: elastic_password.stdout_lines

    - name: Display Kibana enrollment token
      debug:
        var: kibana_token.stdout_lines

    - name: Print installation complete message
      debug:
        msg: "Elasticsearch Stack has been installed successfully. Access Kibana at https://{{ morpheus['server']['internalIp'] }}:5601"
