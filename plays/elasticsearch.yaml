---
- name: Install Elasticsearch
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    rhel_username: "mmajnioui@powerm.ma"
    rhel_password: "{{ lookup('cypher','secret=secret/rhelpw') }}"
    es_version: "8.x"

  tasks:
    # Common proxy environment configuration
    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    # Ubuntu-specific tasks
    - name: Configure HTTP proxy for apt (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Install required packages (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        name:
          - apt-transport-https
          - gpg
          - wget
          - coreutils
        state: present
        update_cache: yes

    - name: Download Elasticsearch GPG key (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      get_url:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        dest: /tmp/elasticsearch.key
      environment:
        http_proxy: "{{ proxy_url }}"
        https_proxy: "{{ proxy_url }}"

    - name: Create keyring directory (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      file:
        path: /usr/share/keyrings
        state: directory
        mode: '0755'

    - name: Import Elasticsearch GPG key (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      shell: cat /tmp/elasticsearch.key | gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg

    - name: Add Elasticsearch repository (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      copy:
        content: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/{{ es_version }}/apt stable main"
        dest: /etc/apt/sources.list.d/elastic-{{ es_version }}.list

    - name: Update apt cache (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        update_cache: yes

    - name: Install Elasticsearch (Ubuntu)
      when: ansible_distribution == "Ubuntu"
      apt:
        name: elasticsearch
        state: present
      register: es_install_ubuntu

    # RHEL-specific tasks
    - name: Configure HTTP proxy for yum (RHEL)
      when: ansible_os_family == "RedHat"
      lineinfile:
        path: /etc/yum.conf
        line: 'proxy={{ proxy_url }}'
        create: yes

    - name: Register and subscribe RHEL system
      when: ansible_os_family == "RedHat"
      command: subscription-manager register --username {{ rhel_username }} --password {{ rhel_password }} --auto-attach
      register: subscription_result
      failed_when: subscription_result.rc != 0 and 'This system is already registered' not in subscription_result.stderr
      changed_when: subscription_result.rc == 0

    - name: Create Elasticsearch repo file (RHEL)
      when: ansible_os_family == "RedHat"
      copy:
        content: |
          [elasticsearch-{{ es_version }}]
          name=Elasticsearch repository for {{ es_version }} packages
          baseurl=https://artifacts.elastic.co/packages/{{ es_version }}/yum
          gpgcheck=1
          gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
          enabled=1
          proxy={{ proxy_url }}
        dest: /etc/yum.repos.d/elasticsearch.repo
        mode: '0644'

    - name: Import Elasticsearch GPG key (RHEL)
      when: ansible_os_family == "RedHat"
      rpm_key:
        key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present

    - name: Install Elasticsearch (RHEL)
      when: ansible_os_family == "RedHat"
      dnf:
        name: elasticsearch
        state: present
      register: es_install_rhel

    # Common post-installation tasks
    - name: Create Elasticsearch configuration
      copy:
        content: |
          cluster.name: my-cluster
          node.name: {{ inventory_hostname }}
          path.data: /var/lib/elasticsearch
          path.logs: /var/log/elasticsearch
          network.host: 0.0.0.0
          discovery.type: single-node
        dest: /etc/elasticsearch/elasticsearch.yml
        mode: '0660'
        owner: root
        group: elasticsearch
      when: es_install_ubuntu is success or es_install_rhel is success

    - name: Start and enable Elasticsearch service
      systemd:
        name: elasticsearch
        state: started
        enabled: yes
        daemon_reload: yes
      when: es_install_ubuntu is success or es_install_rhel is success

    - name: Wait for Elasticsearch to start
      wait_for:
        port: 9200
        delay: 30
        timeout: 300
      when: es_install_ubuntu is success or es_install_rhel is success

    - name: Check Elasticsearch status
      uri:
        url: http://localhost:9200/_cluster/health
        method: GET
        return_content: yes
      register: es_health
      when: es_install_ubuntu is success or es_install_rhel is success

    - name: Display Elasticsearch health
      debug:
        var: es_health
      when: es_install_ubuntu is success or es_install_rhel is success

    - name: Clean up temporary files
      file:
        path: /tmp/elasticsearch.key
        state: absent
      when: ansible_distribution == "Ubuntu"
