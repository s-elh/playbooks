---
- name: Install and configure PostgreSQL
  hosts: all
  become: true
  vars:
    postgresql_version: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['version'] }}"
    postgresql_service: postgresql
    postgres_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] }}"
    db_user: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomUser'] }}"
    db_name: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomName'] }}"
  tasks:
    - name: Print the ansible_os_family fact
      ansible.builtin.debug:
        msg: "The OS family is: {{ ansible_os_family }}"

    - name: Install prerequisites for PostgreSQL on Debian/Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      apt:
        name: 
          - curl
          - ca-certificates
          - gnupg
        state: present
        update_cache: yes

    - name: Create directory for PostgreSQL keys
      when: ansible_facts['os_family'] == 'Debian'
      file:
        path: /usr/share/postgresql-common/pgdg
        state: directory
        mode: '0755'

    - name: Download PostgreSQL GPG key using curl
      when: ansible_facts['os_family'] == 'Debian'
      shell: |
        curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc
      args:
        warn: false

    - name: Add PostgreSQL repository for Debian/Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      shell: |
        echo "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list

    - name: Update apt cache
      when: ansible_facts['os_family'] == 'Debian'
      apt:
        update_cache: yes

    - name: Install PostgreSQL for Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      apt:
        name:
          - "postgresql-{{ postgresql_version }}"
          - python3-psycopg2
        state: present

    - name: Ensure PostgreSQL service is running and enabled on Debian/Ubuntu
      when: ansible_facts['os_family'] == 'Debian'
      ansible.builtin.systemd:
        name: postgresql
        enabled: yes
        state: started

    - name: Collect PostgreSQL version and extensions
      shell: |
        sudo -u postgres psql -c "SELECT version();"
        sudo -u postgres psql -c "SELECT * FROM pg_extension;"
      register: postgres_info

    - name: Debug PostgreSQL info
      debug:
        msg: "PostgreSQL information: {{ postgres_info.stdout_lines }}"

    - name: Create PostgreSQL user
      shell: |
        sudo -u postgres psql -c "CREATE USER {{ db_user }} WITH PASSWORD '{{ postgres_password }}';"
      register: create_user_result

    - name: Create a new database 
      shell: |
        sudo -u postgres psql -c "CREATE DATABASE {{ db_name }} OWNER {{ db_user }};"

    - name: Debug user creation result
      debug:
        msg: "User creation result: {{ create_user_result }}"
