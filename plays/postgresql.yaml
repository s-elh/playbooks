---
- name: Install and configure PostgreSQL
  hosts: all
  become: true
  vars:
    proxy_url: "http://10.1.38.2:3128"
    postgresql_version: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['version'] }}"
    postgres_password: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomPassword'] }}"
    db_user: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomUser'] }}"
    db_name: "{{ hostvars[inventory_hostname]['morpheus']['customOptions']['dbCustomName'] }}"
    sudo_password: "<%=cypher.read('secret/pw')%>"
    db_vars_provided: false

  tasks:
    - name: Configure HTTP proxy for apt
      copy:
        content: |
          Acquire::http::Proxy "{{ proxy_url }}";
          Acquire::https::Proxy "{{ proxy_url }}";
        dest: /etc/apt/apt.conf.d/95proxies

    - name: Configure HTTP proxy for the environment
      lineinfile:
        path: /etc/environment
        line: '{{ item }}'
        create: yes
      with_items:
        - 'http_proxy={{ proxy_url }}'
        - 'https_proxy={{ proxy_url }}'
        - 'HTTP_PROXY={{ proxy_url }}'
        - 'HTTPS_PROXY={{ proxy_url }}'

    - name: Check if database variables are provided
      set_fact:
        db_vars_provided: true
      when: 
        - db_user != ''
        - postgres_password != ''
        - db_name != ''

    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Ensure PostgreSQL is started and enabled
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Set PostgreSQL password for postgres user
      when: postgres_password is defined
      shell: |
        PGPASSWORD="{{ sudo_password }}" sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD '{{ postgres_password }}';"
      register: set_postgres_password

    - name: Create database user
      when: db_vars_provided
      shell: |
        PGPASSWORD="{{ sudo_password }}" sudo -u postgres psql -c "CREATE USER {{ db_user }} WITH PASSWORD '{{ postgres_password }}';"
      register: create_user_result
      ignore_errors: yes

    - name: Create database
      when: db_vars_provided
      shell: |
        PGPASSWORD="{{ sudo_password }}" sudo -u postgres psql -c "CREATE DATABASE {{ db_name }} OWNER {{ db_user }};"
      register: create_db_result
      ignore_errors: yes

    - name: Grant privileges
      when: db_vars_provided
      shell: |
        PGPASSWORD="{{ sudo_password }}" sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE {{ db_name }} TO {{ db_user }};"
      register: grant_privileges

    - name: Debug database setup results
      when: db_vars_provided
      debug:
        msg: 
          - "User creation: {{ create_user_result.stdout | default('No output') }}"
          - "Database creation: {{ create_db_result.stdout | default('No output') }}"
          - "Privilege grant: {{ grant_privileges.stdout | default('No output') }}"
